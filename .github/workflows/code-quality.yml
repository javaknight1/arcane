name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  formatting:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort

      - name: Check formatting with Black
        run: black --check --diff arcane/

      - name: Check import sorting with isort
        run: isort --check-only --diff arcane/

  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 arcane/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 arcane/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Lint with pylint
        run: |
          pylint arcane/ --exit-zero --output-format=json > pylint-report.json || true

      - name: Upload pylint report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pylint-report
          path: pylint-report.json

  type-checking:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy types-requests

      - name: Type check with mypy
        run: |
          mypy arcane/ --ignore-missing-imports --output json > mypy-report.json || true

      - name: Upload mypy report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mypy-report
          path: mypy-report.json

  complexity:
    name: Code Complexity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install complexity tools
        run: |
          python -m pip install --upgrade pip
          pip install radon xenon

      - name: Analyze complexity with radon
        run: |
          radon cc arcane/ --json > radon-cc.json
          radon mi arcane/ --json > radon-mi.json

      - name: Check complexity with xenon
        run: |
          xenon --max-absolute B --max-modules A --max-average A arcane/ || true

      - name: Upload complexity reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: complexity-reports
          path: |
            radon-cc.json
            radon-mi.json

  documentation:
    name: Documentation Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install documentation tools
        run: |
          python -m pip install --upgrade pip
          pip install pydocstyle interrogate

      - name: Check docstring style
        run: |
          pydocstyle arcane/ --explain --source || true

      - name: Check documentation coverage
        run: |
          interrogate -v arcane/ --generate-badge interrogate-badge.svg

      - name: Upload documentation reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: documentation-reports
          path: interrogate-badge.svg